## NOTE: Do not round the result!
corrVec <- numeric()
completeDataFrame <- complete(directory)
fileNames <- Sys.glob("*.csv")
for (nobsID in completeDataFrame) {
if (completeDataFrame[[nobsID]] >= threshold) {
currFile <- read.csv(fileNames[nobsID], header=TRUE, sep=",")
corrVec <- c(corrVec, cor(currFile$sulfate, currFile$nitrate))
}
}
corrVec
}
corr("specdata", 150)
completeDataFrame <- complete("specdata")
completeDataFrame
for (nobsID in completeDataFrame) {nobsID}
for (ID in completeDataFrame) {ID}
View(completeDataFrame)
for (id in completeDataFrame) {id}
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to computer the correlation between
## nitrate and sulfate; the default is 0.
## Return a numeric vector of correlations.
## NOTE: Do not round the result!
corrVec <- numeric()
completeDataFrame <- complete(directory)
fileNames <- Sys.glob("*.csv")
for (i in seq_along(completeDataFrame)) {
if (completeDataFrame[i]$nobs >= threshold) {
currFile <- read.csv(fileNames[i], header=TRUE, sep=",")
corrVec <- c(corrVec, cor(currFile$sulfate, currFile$nitrate))
}
}
corrVec
}
corr("specdata", 150)
completeDataFrame[1]$nobs
completeDataFrame[1]
completeDataFrame[2]
i in seq_along(completeDataFrame)
for (i in seq_along(completeDataFrame)) {}
for (i in seq_along(completeDataFrame)) {i}
for (i in seq_along(completeDataFrame[1])) {i}
seq_along(completeDataFrame[1])
nrows(completeDataFrame)
nrow(completeDataFrame)
completeDataFrame[2][5]
completeDataFrame[5, 2]
View(completeDataFrame)
seq_along(completeDataFrame)
nrow(completeDataFrame)
for (i in nrow(completeDataFrame)) {i}
fileNames <- Sys.glob("*.csv")
fileNames <- Sys.glob(paste(directory, "/", "*.csv"))
fileNames <- Sys.glob(paste("specdata", "/", "*.csv"))
paste("specdata", "/", "*.csv")
paste("specdata", "/", "*.csv", sep="")
fileNames <- Sys.glob(paste("specdata", "/", "*.csv", sep=""))
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to computer the correlation between
## nitrate and sulfate; the default is 0.
## Return a numeric vector of correlations.
## NOTE: Do not round the result!
corrVec <- numeric()
completeDataFrame <- complete(directory)
fileNames <- Sys.glob(paste(directory, "/", "*.csv", sep=""))
for (i in 1:nrow(completeDataFrame)) {
if (completeDataFrame[i, 2] >= threshold) {
currFile <- read.csv(fileNames[i], header=TRUE, sep=",")
corrVec <- c(corrVec, cor(currFile$sulfate, currFile$nitrate))
}
}
corrVec
}
corr("specdata", 150)
head(corr("specdata", 150))
corrVec <- numeric()
completeDataFrame <- complete(directory)
fileNames <- Sys.glob(paste(directory, "/", "*.csv", sep=""))
for (i in 1:nrow(completeDataFrame)) {
if (completeDataFrame[i, 2] >= threshold) {
currFile <- read.csv(fileNames[i], header=TRUE, sep=",")
corrVec <- c(corrVec, cor(currFile$sulfate, currFile$nitrate))
}
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
threeDigNumVec <- sprintf("%03d", id)
filesToBeReadVec <- character()
for (i in seq_along(threeDigNumVec)) {
filesToBeReadVec[i] <- paste(directory, "/", threeDigNumVec[i], ".csv", sep="")
}
pollutantVector <- numeric()
meanOfPollutant <- numeric()
for (j in seq_along(filesToBeReadVec)) {
currCSV <- read.csv(file=filesToBeReadVec[j], header=TRUE, sep=",")
pollutantVector <- c(pollutantVector, currCSV[[pollutant]])
}
meanOfPollutant <- mean(pollutantVector, na.rm=TRUE)
meanOfPollutant
}
complete <- function(directory, id = 1:332) {
threeDigNumVec <- sprintf("%03d", id)
filesToBeReadVec <- character()
for (i in seq_along(threeDigNumVec)) {
filesToBeReadVec[i] <- paste(directory, "/", threeDigNumVec[i], ".csv", sep="")
}
nobsVec <- numeric()
for (j in seq_along(filesToBeReadVec)) {
currCSV <- read.csv(file=filesToBeReadVec[j], header=TRUE, sep=",")
currNobsSum <- nrow(currCSV[complete.cases(currCSV), ])
nobsVec <- c(nobsVec, currNobsSum)
}
completeDataFrame <- data.frame(id = id, nobs = nobsVec)
completeDataFrame
}
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to computer the correlation between
## nitrate and sulfate; the default is 0.
## Return a numeric vector of correlations.
## NOTE: Do not round the result!
corrVec <- numeric()
completeDataFrame <- complete(directory)
fileNames <- Sys.glob(paste(directory, "/", "*.csv", sep=""))
for (i in 1:nrow(completeDataFrame)) {
if (completeDataFrame[i, 2] >= threshold) {
currFile <- read.csv(fileNames[i], header=TRUE, sep=",")
corrVec <- c(corrVec, cor(currFile$sulfate, currFile$nitrate))
}
}
corrVec
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
threeDigNumVec <- sprintf("%03d", id)
filesToBeReadVec <- character()
for (i in seq_along(threeDigNumVec)) {
filesToBeReadVec[i] <- paste(directory, "/", threeDigNumVec[i], ".csv", sep="")
}
pollutantVector <- numeric()
meanOfPollutant <- numeric()
for (j in seq_along(filesToBeReadVec)) {
currCSV <- read.csv(file=filesToBeReadVec[j], header=TRUE, sep=",")
pollutantVector <- c(pollutantVector, currCSV[[pollutant]])
}
meanOfPollutant <- mean(pollutantVector, na.rm=TRUE)
meanOfPollutant
}
complete <- function(directory, id = 1:332) {
threeDigNumVec <- sprintf("%03d", id)
filesToBeReadVec <- character()
for (i in seq_along(threeDigNumVec)) {
filesToBeReadVec[i] <- paste(directory, "/", threeDigNumVec[i], ".csv", sep="")
}
nobsVec <- numeric()
for (j in seq_along(filesToBeReadVec)) {
currCSV <- read.csv(file=filesToBeReadVec[j], header=TRUE, sep=",")
currNobsSum <- nrow(currCSV[complete.cases(currCSV), ])
nobsVec <- c(nobsVec, currNobsSum)
}
completeDataFrame <- data.frame(id = id, nobs = nobsVec)
completeDataFrame
}
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to computer the correlation between
## nitrate and sulfate; the default is 0.
## Return a numeric vector of correlations.
## NOTE: Do not round the result!
corrVec <- numeric()
completeDataFrame <- complete(directory)
fileNames <- Sys.glob(paste(directory, "/", "*.csv", sep=""))
for (i in 1:nrow(completeDataFrame)) {
if (completeDataFrame[i, 2] >= threshold) {
currFile <- read.csv(fileNames[i], header=TRUE, sep=",")
corrVec <- c(corrVec, cor(currFile$sulfate, currFile$nitrate))
}
}
corrVec
}
corr("specdata", 150)
fileNames <- Sys.glob(paste("specdata", "/", "*.csv", sep=""))
completeDataFrame <- complete("specdata")
View(completeDataFrame)
for (i in 1:nrow(completeDataFrame)) {
if (completeDataFrame[i, 2] >= threshold) {
currFile <- read.csv(fileNames[i], header=TRUE, sep=",")
corrVec <- c(corrVec, cor(currFile$sulfate, currFile$nitrate))
}
}
for (i in 1:nrow(completeDataFrame)) {
if (completeDataFrame[i, 2] >= 150) {
currFile <- read.csv(fileNames[i], header=TRUE, sep=",")
corrVec <- c(corrVec, cor(currFile$sulfate, currFile$nitrate))
}
}
corrVec <- numeric()
for (i in 1:nrow(completeDataFrame)) {
if (completeDataFrame[i, 2] >= 150) {
currFile <- read.csv(fileNames[i], header=TRUE, sep=",")
corrVec <- c(corrVec, cor(currFile$sulfate, currFile$nitrate))
}
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
threeDigNumVec <- sprintf("%03d", id)
filesToBeReadVec <- character()
for (i in seq_along(threeDigNumVec)) {
filesToBeReadVec[i] <- paste(directory, "/", threeDigNumVec[i], ".csv", sep="")
}
pollutantVector <- numeric()
meanOfPollutant <- numeric()
for (j in seq_along(filesToBeReadVec)) {
currCSV <- read.csv(file=filesToBeReadVec[j], header=TRUE, sep=",")
pollutantVector <- c(pollutantVector, currCSV[[pollutant]])
}
meanOfPollutant <- mean(pollutantVector, na.rm=TRUE)
meanOfPollutant
}
complete <- function(directory, id = 1:332) {
threeDigNumVec <- sprintf("%03d", id)
filesToBeReadVec <- character()
for (i in seq_along(threeDigNumVec)) {
filesToBeReadVec[i] <- paste(directory, "/", threeDigNumVec[i], ".csv", sep="")
}
nobsVec <- numeric()
for (j in seq_along(filesToBeReadVec)) {
currCSV <- read.csv(file=filesToBeReadVec[j], header=TRUE, sep=",")
currNobsSum <- nrow(currCSV[complete.cases(currCSV), ])
nobsVec <- c(nobsVec, currNobsSum)
}
completeDataFrame <- data.frame(id = id, nobs = nobsVec)
completeDataFrame
}
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to computer the correlation between
## nitrate and sulfate; the default is 0.
## Return a numeric vector of correlations.
## NOTE: Do not round the result!
corrVec <- numeric()
completeDataFrame <- complete(directory)
fileNames <- Sys.glob(paste(directory, "/", "*.csv", sep=""))
for (i in 1:nrow(completeDataFrame)) {
if (completeDataFrame[i, 2] >= threshold) {
print("true for completeDataFrame[", i, ", 2]")
currFile <- read.csv(fileNames[i], header=TRUE, sep=",")
corrVec <- c(corrVec, cor(currFile$sulfate, currFile$nitrate))
}
}
corrVec
}
corrVec <- numeric()
completeDataFrame <- complete(directory)
fileNames <- Sys.glob(paste(directory, "/", "*.csv", sep=""))
corrVec <- numeric()
completeDataFrame <- complete("specdata")
fileNames <- Sys.glob(paste("specdata", "/", "*.csv", sep=""))
for (i in 1:nrow(completeDataFrame)) {
if (completeDataFrame[i, 2] >= threshold) {
print("true for completeDataFrame[", i, ", 2]")
currFile <- read.csv(fileNames[i], header=TRUE, sep=",")
corrVec <- c(corrVec, cor(currFile$sulfate, currFile$nitrate))
}
}
for (i in 1:nrow(completeDataFrame)) {
if (completeDataFrame[i, 2] >= 150) {
print("true for completeDataFrame[", i, ", 2]")
currFile <- read.csv(fileNames[i], header=TRUE, sep=",")
corrVec <- c(corrVec, cor(currFile$sulfate, currFile$nitrate))
}
}
for (i in 1:nrow(completeDataFrame)) {
if (completeDataFrame[i, 2] >= 150) {
print("true for completeDataFrame[", as.character(i), ", 2]")
currFile <- read.csv(fileNames[i], header=TRUE, sep=",")
corrVec <- c(corrVec, cor(currFile$sulfate, currFile$nitrate))
}
}
for (i in 1:nrow(completeDataFrame)) {
if (completeDataFrame[i, 2] >= 150) {
print(i)
currFile <- read.csv(fileNames[i], header=TRUE, sep=",")
corrVec <- c(corrVec, cor(currFile$sulfate, currFile$nitrate))
}
}
View(currFile)
currFile$sulfate
cor(currFile$sulfate, currFile$nitrate)
cor(currFile$sulfate, currFile$nitrate, rm.na=TRUE)
cor(currFile$sulfate, currFile$nitrate, na.rm=TRUE)
currFile <- read.csv(fileNames[i], header=TRUE, sep=",", na.rm=TRUE)
?read.csv
currFile <- read.csv(fileNames[i], header=TRUE, sep=",")
currFile <- currFile[complete.cases(currFile), ]
pollutantmean <- function(directory, pollutant, id = 1:332) {
threeDigNumVec <- sprintf("%03d", id)
filesToBeReadVec <- character()
for (i in seq_along(threeDigNumVec)) {
filesToBeReadVec[i] <- paste(directory, "/", threeDigNumVec[i], ".csv", sep="")
}
pollutantVector <- numeric()
meanOfPollutant <- numeric()
for (j in seq_along(filesToBeReadVec)) {
currCSV <- read.csv(file=filesToBeReadVec[j], header=TRUE, sep=",")
pollutantVector <- c(pollutantVector, currCSV[[pollutant]])
}
meanOfPollutant <- mean(pollutantVector, na.rm=TRUE)
meanOfPollutant
}
complete <- function(directory, id = 1:332) {
threeDigNumVec <- sprintf("%03d", id)
filesToBeReadVec <- character()
for (i in seq_along(threeDigNumVec)) {
filesToBeReadVec[i] <- paste(directory, "/", threeDigNumVec[i], ".csv", sep="")
}
nobsVec <- numeric()
for (j in seq_along(filesToBeReadVec)) {
currCSV <- read.csv(file=filesToBeReadVec[j], header=TRUE, sep=",")
currNobsSum <- nrow(currCSV[complete.cases(currCSV), ])
nobsVec <- c(nobsVec, currNobsSum)
}
completeDataFrame <- data.frame(id = id, nobs = nobsVec)
completeDataFrame
}
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to computer the correlation between
## nitrate and sulfate; the default is 0.
## Return a numeric vector of correlations.
## NOTE: Do not round the result!
corrVec <- numeric()
completeDataFrame <- complete(directory)
fileNames <- Sys.glob(paste(directory, "/", "*.csv", sep=""))
for (i in 1:nrow(completeDataFrame)) {
if (completeDataFrame[i, 2] >= threshold) {
print(i)
currFile <- read.csv(fileNames[i], header=TRUE, sep=",")
currFile <- currFile[complete.cases(currFile), ]
corrVec <- c(corrVec, cor(currFile$sulfate, currFile$nitrate))
}
}
corrVec
}
corr("specdata", 150)
head(corr("specdata", 150))
pollutantmean <- function(directory, pollutant, id = 1:332) {
threeDigNumVec <- sprintf("%03d", id)
filesToBeReadVec <- character()
for (i in seq_along(threeDigNumVec)) {
filesToBeReadVec[i] <- paste(directory, "/", threeDigNumVec[i], ".csv", sep="")
}
pollutantVector <- numeric()
meanOfPollutant <- numeric()
for (j in seq_along(filesToBeReadVec)) {
currCSV <- read.csv(file=filesToBeReadVec[j], header=TRUE, sep=",")
pollutantVector <- c(pollutantVector, currCSV[[pollutant]])
}
meanOfPollutant <- mean(pollutantVector, na.rm=TRUE)
meanOfPollutant
}
complete <- function(directory, id = 1:332) {
threeDigNumVec <- sprintf("%03d", id)
filesToBeReadVec <- character()
for (i in seq_along(threeDigNumVec)) {
filesToBeReadVec[i] <- paste(directory, "/", threeDigNumVec[i], ".csv", sep="")
}
nobsVec <- numeric()
for (j in seq_along(filesToBeReadVec)) {
currCSV <- read.csv(file=filesToBeReadVec[j], header=TRUE, sep=",")
currNobsSum <- nrow(currCSV[complete.cases(currCSV), ])
nobsVec <- c(nobsVec, currNobsSum)
}
completeDataFrame <- data.frame(id = id, nobs = nobsVec)
completeDataFrame
}
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to computer the correlation between
## nitrate and sulfate; the default is 0.
## Return a numeric vector of correlations.
## NOTE: Do not round the result!
corrVec <- numeric()
completeDataFrame <- complete(directory)
fileNames <- Sys.glob(paste(directory, "/", "*.csv", sep=""))
for (i in 1:nrow(completeDataFrame)) {
if (completeDataFrame[i, 2] >= threshold) {
print(i)
currFile <- read.csv(fileNames[i], header=TRUE, sep=",")
currFile <- currFile[complete.cases(currFile), ]
corrVec <- c(corrVec, cor(currFile$sulfate, currFile$nitrate))
}
}
corrVec
}
head(corr("specdata", 150))
pollutantmean <- function(directory, pollutant, id = 1:332) {
threeDigNumVec <- sprintf("%03d", id)
filesToBeReadVec <- character()
for (i in seq_along(threeDigNumVec)) {
filesToBeReadVec[i] <- paste(directory, "/", threeDigNumVec[i], ".csv", sep="")
}
pollutantVector <- numeric()
meanOfPollutant <- numeric()
for (j in seq_along(filesToBeReadVec)) {
currCSV <- read.csv(file=filesToBeReadVec[j], header=TRUE, sep=",")
pollutantVector <- c(pollutantVector, currCSV[[pollutant]])
}
meanOfPollutant <- mean(pollutantVector, na.rm=TRUE)
meanOfPollutant
}
complete <- function(directory, id = 1:332) {
threeDigNumVec <- sprintf("%03d", id)
filesToBeReadVec <- character()
for (i in seq_along(threeDigNumVec)) {
filesToBeReadVec[i] <- paste(directory, "/", threeDigNumVec[i], ".csv", sep="")
}
nobsVec <- numeric()
for (j in seq_along(filesToBeReadVec)) {
currCSV <- read.csv(file=filesToBeReadVec[j], header=TRUE, sep=",")
currNobsSum <- nrow(currCSV[complete.cases(currCSV), ])
nobsVec <- c(nobsVec, currNobsSum)
}
completeDataFrame <- data.frame(id = id, nobs = nobsVec)
completeDataFrame
}
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to computer the correlation between
## nitrate and sulfate; the default is 0.
## Return a numeric vector of correlations.
## NOTE: Do not round the result!
corrVec <- numeric()
completeDataFrame <- complete(directory)
fileNames <- Sys.glob(paste(directory, "/", "*.csv", sep=""))
for (i in 1:nrow(completeDataFrame)) {
if (completeDataFrame[i, 2] >= threshold) {
currFile <- read.csv(fileNames[i], header=TRUE, sep=",")
currFile <- currFile[complete.cases(currFile), ]
corrVec <- c(corrVec, cor(currFile$sulfate, currFile$nitrate))
}
}
corrVec
}
head(corr("specdata", 150))
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata", 400)
head(cr)
summary(cr)
cr <- corr("specdata", 5000)
summary(cr)
length(cr)
cr <- corr("specdata")
summary(cr)
length(cr)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 34)
pollutantmean("specdata", "nitrate")
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
cc <- complete("specdata", 54)
print(cc$nobs)
RNGversion("3.5.1")
set.seed(42)
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
print(cc[use, "nobs"])
cr <- corr("specdata")
cr <- sort(cr)
RNGversion("3.5.1")
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
cr <- corr("specdata", 129)
cr <- sort(cr)
n <- length(cr)
RNGversion("3.5.1")
set.seed(197)
out <- c(n, round(cr[sample(n, 5)], 4))
print(out)
cr <- corr("specdata", 2000)
n <- length(cr)
cr <- corr("specdata", 1000)
cr <- sort(cr)
print(c(n, round(cr, 4)))
